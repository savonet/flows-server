name: Build and deploy
on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v2
    - uses: ocaml/setup-ocaml@v2
      with:
        ocaml-version: 4.14.0
        opam-disable-sandboxing: true
        dune-cache: true
    - name: Install dependencies
      run: opam list --short --color=never --required-by=liquidsoap-flows-server | xargs opam install -y
    - name: Build
      run: opam exec dune build
      env:
        PGHOST: localhost
        PGPORT: 5432
        PGUSER: postgres
        PGPASSWORD: postgres
        PGDATABASE: postgres
    - name: Setup upterm session
      uses: lhotari/action-upterm@v1
      if: failure()

  deploy:
    runs-on: ubuntu-latest
    needs: build 
    if: github.head_ref == 'main' 
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login into docker
        run: |
          echo $HEROKU_API_KEY | docker login --username=$HEROKU_EMAIL registry.heroku.com --password-stdin
        env:
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      - name: Build docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Release docker container to Heroku.
        run: |
          heroku container:release web --app $HEROKU_APP_NAME
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
